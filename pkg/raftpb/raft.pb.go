// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/raft.proto

package raftpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 日志条目类型
type RaftLogEntryType int32

const (
	RaftLogEntryType_DATA          RaftLogEntryType = 0
	RaftLogEntryType_TXN_BEGIN     RaftLogEntryType = 1
	RaftLogEntryType_TXN_COMMIT    RaftLogEntryType = 2
	RaftLogEntryType_TXN_ROLLBACK  RaftLogEntryType = 3
	RaftLogEntryType_CONFIG_CHANGE RaftLogEntryType = 4
)

// Enum value maps for RaftLogEntryType.
var (
	RaftLogEntryType_name = map[int32]string{
		0: "DATA",
		1: "TXN_BEGIN",
		2: "TXN_COMMIT",
		3: "TXN_ROLLBACK",
		4: "CONFIG_CHANGE",
	}
	RaftLogEntryType_value = map[string]int32{
		"DATA":          0,
		"TXN_BEGIN":     1,
		"TXN_COMMIT":    2,
		"TXN_ROLLBACK":  3,
		"CONFIG_CHANGE": 4,
	}
)

func (x RaftLogEntryType) Enum() *RaftLogEntryType {
	p := new(RaftLogEntryType)
	*p = x
	return p
}

func (x RaftLogEntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RaftLogEntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_raft_proto_enumTypes[0].Descriptor()
}

func (RaftLogEntryType) Type() protoreflect.EnumType {
	return &file_proto_raft_proto_enumTypes[0]
}

func (x RaftLogEntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RaftLogEntryType.Descriptor instead.
func (RaftLogEntryType) EnumDescriptor() ([]byte, []int) {
	return file_proto_raft_proto_rawDescGZIP(), []int{0}
}

// 操作类型
type RaftLogCommandType int32

const (
	RaftLogCommandType_NONE   RaftLogCommandType = 0
	RaftLogCommandType_SET    RaftLogCommandType = 1
	RaftLogCommandType_DELETE RaftLogCommandType = 2
)

// Enum value maps for RaftLogCommandType.
var (
	RaftLogCommandType_name = map[int32]string{
		0: "NONE",
		1: "SET",
		2: "DELETE",
	}
	RaftLogCommandType_value = map[string]int32{
		"NONE":   0,
		"SET":    1,
		"DELETE": 2,
	}
)

func (x RaftLogCommandType) Enum() *RaftLogCommandType {
	p := new(RaftLogCommandType)
	*p = x
	return p
}

func (x RaftLogCommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RaftLogCommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_raft_proto_enumTypes[1].Descriptor()
}

func (RaftLogCommandType) Type() protoreflect.EnumType {
	return &file_proto_raft_proto_enumTypes[1]
}

func (x RaftLogCommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RaftLogCommandType.Descriptor instead.
func (RaftLogCommandType) EnumDescriptor() ([]byte, []int) {
	return file_proto_raft_proto_rawDescGZIP(), []int{1}
}

// --- 投票请求/响应 ---
type RequestVoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	CandidateID   uint64                 `protobuf:"varint,2,opt,name=candidateID,proto3" json:"candidateID,omitempty"`
	LastLogIndex  uint64                 `protobuf:"varint,3,opt,name=lastLogIndex,proto3" json:"lastLogIndex,omitempty"`
	LastLogTerm   uint64                 `protobuf:"varint,4,opt,name=lastLogTerm,proto3" json:"lastLogTerm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestVoteRequest) Reset() {
	*x = RequestVoteRequest{}
	mi := &file_proto_raft_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteRequest) ProtoMessage() {}

func (x *RequestVoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_raft_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteRequest.ProtoReflect.Descriptor instead.
func (*RequestVoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_raft_proto_rawDescGZIP(), []int{0}
}

func (x *RequestVoteRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteRequest) GetCandidateID() uint64 {
	if x != nil {
		return x.CandidateID
	}
	return 0
}

func (x *RequestVoteRequest) GetLastLogIndex() uint64 {
	if x != nil {
		return x.LastLogIndex
	}
	return 0
}

func (x *RequestVoteRequest) GetLastLogTerm() uint64 {
	if x != nil {
		return x.LastLogTerm
	}
	return 0
}

type RequestVoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted   bool                   `protobuf:"varint,2,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestVoteResponse) Reset() {
	*x = RequestVoteResponse{}
	mi := &file_proto_raft_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestVoteResponse) ProtoMessage() {}

func (x *RequestVoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_raft_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestVoteResponse.ProtoReflect.Descriptor instead.
func (*RequestVoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_raft_proto_rawDescGZIP(), []int{1}
}

func (x *RequestVoteResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *RequestVoteResponse) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

// --- 日志复制与心跳 ---
type AppendEntriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	LeaderID      uint64                 `protobuf:"varint,2,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	PrevLogIndex  uint64                 `protobuf:"varint,3,opt,name=prevLogIndex,proto3" json:"prevLogIndex,omitempty"`
	PrevLogTerm   uint64                 `protobuf:"varint,4,opt,name=prevLogTerm,proto3" json:"prevLogTerm,omitempty"`
	Entries       []*RaftLogEntry        `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	LeaderCommit  uint64                 `protobuf:"varint,6,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesRequest) Reset() {
	*x = AppendEntriesRequest{}
	mi := &file_proto_raft_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesRequest) ProtoMessage() {}

func (x *AppendEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_raft_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesRequest.ProtoReflect.Descriptor instead.
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) {
	return file_proto_raft_proto_rawDescGZIP(), []int{2}
}

func (x *AppendEntriesRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesRequest) GetLeaderID() uint64 {
	if x != nil {
		return x.LeaderID
	}
	return 0
}

func (x *AppendEntriesRequest) GetPrevLogIndex() uint64 {
	if x != nil {
		return x.PrevLogIndex
	}
	return 0
}

func (x *AppendEntriesRequest) GetPrevLogTerm() uint64 {
	if x != nil {
		return x.PrevLogTerm
	}
	return 0
}

func (x *AppendEntriesRequest) GetEntries() []*RaftLogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AppendEntriesRequest) GetLeaderCommit() uint64 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

type AppendEntriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	MatchIndex    uint64                 `protobuf:"varint,3,opt,name=matchIndex,proto3" json:"matchIndex,omitempty"` // 可选，返回最后匹配的日志索引
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppendEntriesResponse) Reset() {
	*x = AppendEntriesResponse{}
	mi := &file_proto_raft_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppendEntriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppendEntriesResponse) ProtoMessage() {}

func (x *AppendEntriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_raft_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppendEntriesResponse.ProtoReflect.Descriptor instead.
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) {
	return file_proto_raft_proto_rawDescGZIP(), []int{3}
}

func (x *AppendEntriesResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *AppendEntriesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AppendEntriesResponse) GetMatchIndex() uint64 {
	if x != nil {
		return x.MatchIndex
	}
	return 0
}

// 日志条目
type RaftLogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogIndex      uint64                 `protobuf:"varint,1,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	LogTerm       uint64                 `protobuf:"varint,2,opt,name=logTerm,proto3" json:"logTerm,omitempty"`
	EntryType     RaftLogEntryType       `protobuf:"varint,3,opt,name=entryType,proto3,enum=raftpb.RaftLogEntryType" json:"entryType,omitempty"`
	OperationType RaftLogCommandType     `protobuf:"varint,4,opt,name=operationType,proto3,enum=raftpb.RaftLogCommandType" json:"operationType,omitempty"`
	TransactionID string                 `protobuf:"bytes,5,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	DataKey       string                 `protobuf:"bytes,6,opt,name=dataKey,proto3" json:"dataKey,omitempty"`
	DataValue     []byte                 `protobuf:"bytes,7,opt,name=dataValue,proto3" json:"dataValue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaftLogEntry) Reset() {
	*x = RaftLogEntry{}
	mi := &file_proto_raft_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaftLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftLogEntry) ProtoMessage() {}

func (x *RaftLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_raft_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftLogEntry.ProtoReflect.Descriptor instead.
func (*RaftLogEntry) Descriptor() ([]byte, []int) {
	return file_proto_raft_proto_rawDescGZIP(), []int{4}
}

func (x *RaftLogEntry) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *RaftLogEntry) GetLogTerm() uint64 {
	if x != nil {
		return x.LogTerm
	}
	return 0
}

func (x *RaftLogEntry) GetEntryType() RaftLogEntryType {
	if x != nil {
		return x.EntryType
	}
	return RaftLogEntryType_DATA
}

func (x *RaftLogEntry) GetOperationType() RaftLogCommandType {
	if x != nil {
		return x.OperationType
	}
	return RaftLogCommandType_NONE
}

func (x *RaftLogEntry) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *RaftLogEntry) GetDataKey() string {
	if x != nil {
		return x.DataKey
	}
	return ""
}

func (x *RaftLogEntry) GetDataValue() []byte {
	if x != nil {
		return x.DataValue
	}
	return nil
}

var File_proto_raft_proto protoreflect.FileDescriptor

const file_proto_raft_proto_rawDesc = "" +
	"\n" +
	"\x10proto/raft.proto\x12\x06raftpb\"\x90\x01\n" +
	"\x12RequestVoteRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12 \n" +
	"\vcandidateID\x18\x02 \x01(\x04R\vcandidateID\x12\"\n" +
	"\flastLogIndex\x18\x03 \x01(\x04R\flastLogIndex\x12 \n" +
	"\vlastLogTerm\x18\x04 \x01(\x04R\vlastLogTerm\"K\n" +
	"\x13RequestVoteResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12 \n" +
	"\vvoteGranted\x18\x02 \x01(\bR\vvoteGranted\"\xe0\x01\n" +
	"\x14AppendEntriesRequest\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12\x1a\n" +
	"\bleaderID\x18\x02 \x01(\x04R\bleaderID\x12\"\n" +
	"\fprevLogIndex\x18\x03 \x01(\x04R\fprevLogIndex\x12 \n" +
	"\vprevLogTerm\x18\x04 \x01(\x04R\vprevLogTerm\x12.\n" +
	"\aentries\x18\x05 \x03(\v2\x14.raftpb.RaftLogEntryR\aentries\x12\"\n" +
	"\fleaderCommit\x18\x06 \x01(\x04R\fleaderCommit\"e\n" +
	"\x15AppendEntriesResponse\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x1e\n" +
	"\n" +
	"matchIndex\x18\x03 \x01(\x04R\n" +
	"matchIndex\"\x9c\x02\n" +
	"\fRaftLogEntry\x12\x1a\n" +
	"\blogIndex\x18\x01 \x01(\x04R\blogIndex\x12\x18\n" +
	"\alogTerm\x18\x02 \x01(\x04R\alogTerm\x126\n" +
	"\tentryType\x18\x03 \x01(\x0e2\x18.raftpb.RaftLogEntryTypeR\tentryType\x12@\n" +
	"\roperationType\x18\x04 \x01(\x0e2\x1a.raftpb.RaftLogCommandTypeR\roperationType\x12$\n" +
	"\rtransactionID\x18\x05 \x01(\tR\rtransactionID\x12\x18\n" +
	"\adataKey\x18\x06 \x01(\tR\adataKey\x12\x1c\n" +
	"\tdataValue\x18\a \x01(\fR\tdataValue*`\n" +
	"\x10RaftLogEntryType\x12\b\n" +
	"\x04DATA\x10\x00\x12\r\n" +
	"\tTXN_BEGIN\x10\x01\x12\x0e\n" +
	"\n" +
	"TXN_COMMIT\x10\x02\x12\x10\n" +
	"\fTXN_ROLLBACK\x10\x03\x12\x11\n" +
	"\rCONFIG_CHANGE\x10\x04*3\n" +
	"\x12RaftLogCommandType\x12\b\n" +
	"\x04NONE\x10\x00\x12\a\n" +
	"\x03SET\x10\x01\x12\n" +
	"\n" +
	"\x06DELETE\x10\x022\xa3\x01\n" +
	"\vRaftService\x12F\n" +
	"\vRequestVote\x12\x1a.raftpb.RequestVoteRequest\x1a\x1b.raftpb.RequestVoteResponse\x12L\n" +
	"\rAppendEntries\x12\x1c.raftpb.AppendEntriesRequest\x1a\x1d.raftpb.AppendEntriesResponseB\x14Z\x12/pkg/raftpb;raftpbb\x06proto3"

var (
	file_proto_raft_proto_rawDescOnce sync.Once
	file_proto_raft_proto_rawDescData []byte
)

func file_proto_raft_proto_rawDescGZIP() []byte {
	file_proto_raft_proto_rawDescOnce.Do(func() {
		file_proto_raft_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_raft_proto_rawDesc), len(file_proto_raft_proto_rawDesc)))
	})
	return file_proto_raft_proto_rawDescData
}

var file_proto_raft_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_raft_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_raft_proto_goTypes = []any{
	(RaftLogEntryType)(0),         // 0: raftpb.RaftLogEntryType
	(RaftLogCommandType)(0),       // 1: raftpb.RaftLogCommandType
	(*RequestVoteRequest)(nil),    // 2: raftpb.RequestVoteRequest
	(*RequestVoteResponse)(nil),   // 3: raftpb.RequestVoteResponse
	(*AppendEntriesRequest)(nil),  // 4: raftpb.AppendEntriesRequest
	(*AppendEntriesResponse)(nil), // 5: raftpb.AppendEntriesResponse
	(*RaftLogEntry)(nil),          // 6: raftpb.RaftLogEntry
}
var file_proto_raft_proto_depIdxs = []int32{
	6, // 0: raftpb.AppendEntriesRequest.entries:type_name -> raftpb.RaftLogEntry
	0, // 1: raftpb.RaftLogEntry.entryType:type_name -> raftpb.RaftLogEntryType
	1, // 2: raftpb.RaftLogEntry.operationType:type_name -> raftpb.RaftLogCommandType
	2, // 3: raftpb.RaftService.RequestVote:input_type -> raftpb.RequestVoteRequest
	4, // 4: raftpb.RaftService.AppendEntries:input_type -> raftpb.AppendEntriesRequest
	3, // 5: raftpb.RaftService.RequestVote:output_type -> raftpb.RequestVoteResponse
	5, // 6: raftpb.RaftService.AppendEntries:output_type -> raftpb.AppendEntriesResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_raft_proto_init() }
func file_proto_raft_proto_init() {
	if File_proto_raft_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_raft_proto_rawDesc), len(file_proto_raft_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_raft_proto_goTypes,
		DependencyIndexes: file_proto_raft_proto_depIdxs,
		EnumInfos:         file_proto_raft_proto_enumTypes,
		MessageInfos:      file_proto_raft_proto_msgTypes,
	}.Build()
	File_proto_raft_proto = out.File
	file_proto_raft_proto_goTypes = nil
	file_proto_raft_proto_depIdxs = nil
}
