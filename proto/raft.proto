syntax = "proto3";

package raftpb;
option go_package = "/pkg/raftpb;raftpb";


// --- Raft Service 定义 ---
service RaftService {
  // 投票请求
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse);
  // 日志复制与心跳
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
}

// --- 投票请求/响应 ---
message RequestVoteRequest {
  uint64 term = 1;
  uint64 candidateID = 2;
  uint64 lastLogIndex = 3;
  uint64 lastLogTerm = 4;
}

message RequestVoteResponse {
  uint64 term = 1;
  bool voteGranted = 2;
}

// --- 日志复制与心跳 ---
message AppendEntriesRequest {
  uint64 term = 1;
  uint64 leaderID = 2;
  uint64 prevLogIndex = 3;
  uint64 prevLogTerm = 4;
  repeated RaftLogEntry entries = 5;
  uint64 leaderCommit = 6;
}

message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
  uint64 matchIndex = 3; // 可选，返回最后匹配的日志索引
  uint64 conflictIndex  = 4;  // follower 日志中首次冲突或缺失的索引
  uint64 conflictTerm   = 5;  // 上一条冲突日志的任期值

}

// 日志条目类型
enum RaftLogEntryType {
    DATA = 0;
    TXN_BEGIN = 1;
    TXN_COMMIT = 2;
    TXN_ROLLBACK = 3;
    CONFIG_CHANGE = 4;
}

// 操作类型
enum RaftLogCommandType {
    NONE = 0;
    SET = 1;
    DELETE = 2;
}

// 日志条目
message RaftLogEntry {
    uint64 logIndex = 1;
    uint64 logTerm = 2;
    RaftLogEntryType entryType = 3;
    RaftLogCommandType operationType = 4;
    string transactionID = 5;
    string dataKey = 6;
    bytes dataValue = 7;
}
